{"version":3,"sources":["Component/Nav.Styled.js","Component/Navs.js","Component/Title.styled.js","Component/Title.js","Component/MainPageLayout.js","misc/config.js","Component/styled.js","Component/Show/ShowCard.styled.js","Component/Show/ShowCard.js","Image/404.jpg","misc/Custom-Hooks.js","Component/Show/ShowGrid.js","Component/Person/PersonCard.styled.js","Component/Person/PersonCard.js","Component/Person/PersonGrid.js","Pages/Home.styled.js","Pages/Home.js","Pages/Starred.js","Pages/Error.js","Component/Show/Cast.styled.js","Component/Show/Cast.js","Component/Show/Detailed.styled.js","Component/Show/Details.js","Component/Show/Season.styled.js","Component/Show/Season.js","Component/Show/ShowMainData.styled.js","Component/Show/ShowMainData.js","Pages/Show.styled.js","Pages/Show.js","App.js","reportWebVitals.js","index.js"],"names":["NavList","styled","ul","LinkStyled","Link","theme","mainColors","gray","blue","LINKS","to","text","Nav","location","useLocation","className","map","links","pathname","TitleWrapper","div","dark","Title","title","subtitle","MainPageLayout","BASE_API","apiGet","queryString","a","fetch","then","r","json","response","FlexGrid","FadeIn","SearchCard","Star","props","active","StyledShowCard","ShowCard","id","name","language","image","summary","onStarClick","isStarred","summaryAsText","split","slice","join","replace","src","alt","type","onClick","showsReducer","prevState","action","showId","filter","usePersistedReducer","reducer","initialState","key","useReducer","initial","persisted","localStorage","getItem","JSON","parse","state","dispatch","useEffect","setItem","stringify","useShows","ShowGrid","data","starredShows","dispatchStarred","show","includes","medium","Not_found_Img","StyledPersonCard","PersonCard","country","birthday","deathday","PersonGrid","person","SearchInput","input","RadioInputsWrapper","SearchButtonWrapper","Home","useState","setInput","results","setResult","searchOption","setSearchOption","checked","onSearch","console","log","onRadioChange","ev","target","value","placeholder","onChange","onKeyDown","keyCode","htmlFor","length","Starred","shows","setShows","isLoading","setIsLoading","error","setError","promises","Promise","all","apiData","catch","err","message","Error","CastList","Cast","cast","character","DetailsWrapper","Details","status","premiered","network","SeasonsWrapper","SeasonList","Seasons","seasons","reduce","acc","season","episodeOrder","number","premiereDate","endDate","MainDataWrapper","Headline","ShowMainData","rate","tags","dangerouslySetInnerHTML","__html","tag","i","ShowPageWrapper","Show","useParams","isMounted","rating","average","genres","Season","_embedded","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.65f925c9.chunk.js","sourcesContent":["import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport const NavList = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n  list-style: none;\r\n  margin: 0 0 30px;\r\n  padding: 0;\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n  margin: 0 10px;\r\n  padding: 3px 15px;\r\n  position: relative;\r\n  text-decoration: none;\r\n  color: ${({ theme }) => theme.mainColors.gray};\r\n  &.active {\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    &:after {\r\n      content: '';\r\n      position: absolute;\r\n      display: block;\r\n      height: 2px;\r\n      left: 0%;\r\n      bottom: 0;\r\n      background-color: ${({ theme }) => theme.mainColors.blue};\r\n      animation: slide-in 0.3s ease-in forwards;\r\n      @keyframes slide-in {\r\n        from {\r\n          left: 50%;\r\n          width: 0;\r\n        }\r\n        to {\r\n          left: 0%;\r\n          width: 100%;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {  useLocation } from \"react-router\";\r\nimport { NavList, LinkStyled } from \"./Nav.Styled\";\r\n\r\nconst LINKS = [\r\n  { to: \"/\", text: \"Home\" },\r\n  { to: \"/starred\", text: \"Starred\" },\r\n];\r\nconst Nav = () => {\r\n  const location =useLocation()\r\n  // console.log(location);\r\n  return (\r\n    <>\r\n      <div className=\"navbar\">\r\n        <NavList>\r\n          {LINKS.map((links) => {\r\n            return (\r\n              <li key={links.to}>\r\n                <LinkStyled to={links.to} className={links.to === location.pathname ?'active':\"\"}>{links.text}</LinkStyled>\r\n              </li>\r\n            );\r\n          })}\r\n        </NavList>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import styled from 'styled-components';\r\n\r\nexport const TitleWrapper = styled.div`\r\n  text-align: center;\r\n  margin: 0 0 40px;\r\n\r\n  h1 {\r\n    color: ${({ theme }) => theme.mainColors.blue};\r\n    letter-spacing: 10px;\r\n    text-transform: uppercase;\r\n    margin: 0 0 10px;\r\n  }\r\n\r\n  p {\r\n    color: ${({ theme }) => theme.mainColors.dark};\r\n    margin: 0;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { TitleWrapper } from \"./Title.styled\";\r\n\r\nconst Title = ({ title, subtitle }) => {\r\n  return (\r\n    <TitleWrapper>\r\n      <h1>{title}</h1>\r\n      <p>{subtitle}</p>\r\n    </TitleWrapper>\r\n  );\r\n};\r\n\r\nexport default Title;\r\n","import React from \"react\";\r\nimport Nav from \"./Navs.js\";\r\nimport Title from \"./Title.js\";\r\n\r\nconst MainPageLayout = () => {\r\n  return (\r\n    <div>\r\n        <Title title ={\"Box Office\"} subtitle={\"Are you looking for movies or an actor?\"}/>\r\n      <Nav />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPageLayout;\r\n","const BASE_API = \"https://api.tvmaze.com\";\r\n\r\nexport async function apiGet(queryString) {\r\n  const response = await fetch(`${BASE_API}${queryString}`).then((r) => r.json());\r\n  return response;\r\n}\r\n","import  styled  from \"styled-components\";\r\nimport FadeIn from 'react-fade-in';\r\nexport const FlexGrid = styled(FadeIn)`\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-wrap: wrap;\r\n`;\r\n\r\nexport const SearchCard = styled.div`\r\n  width: 300px;\r\n  height: 100%;\r\n  margin: 0 15px 40px;\r\n\r\n  .img-wrapper {\r\n    width: 100%;\r\n    border-radius: 40px;\r\n    height: 420px;\r\n    overflow: hidden;\r\n    border: 1px solid #ddd;\r\n\r\n    img {\r\n      object-fit: cover;\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n  }\r\n\r\n  h1 {\r\n    margin: 10px 0;\r\n    font-size: 21px;\r\n  }\r\n\r\n  p {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nexport const Star = styled.div`\r\n  display: inline-block;\r\n  width: 18px;\r\n  height: 18px;\r\n  background-color:  ${props => (props.active ? '#ffc806' : '#ddd')};;\r\n  clip-path: polygon(\r\n    50% 0%,\r\n    61% 35%,\r\n    98% 35%,\r\n    68% 57%,\r\n    79% 91%,\r\n    50% 70%,\r\n    21% 91%,\r\n    32% 57%,\r\n    2% 35%,\r\n    39% 35%\r\n  );\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { SearchCard } from \"../styled\";\r\n\r\nexport const StyledShowCard = styled(SearchCard)`\r\n  button {\r\n    outline: none;\r\n    border: 1px solid #8e8e8e;\r\n    border-radius: 15px;\r\n    padding: 5px 20px;\r\n    background-color: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  button:hover {\r\n    cursor: pointer;\r\n  }\r\n  .btns {\r\n    margin-top: 15px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n  }\r\n  a {\r\n    text-decoration-color: #000;\r\n    color: #000;\r\n  }\r\n  a:hover {\r\n    text-decoration-color: blue;\r\n    color: blue;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledShowCard } from \"./ShowCard.styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Star } from \"../styled\";\r\nconst ShowCard = ({\r\n  id,\r\n  name,\r\n  language,\r\n  image,\r\n  summary,\r\n  onStarClick,\r\n  isStarred\r\n \r\n}) => {\r\n  const summaryAsText = summary\r\n    ? `${summary.split(\" \").slice(0, 15).join(\" \").replace(/<.+?>/g, \"\")}...`\r\n    : \"No description\";\r\n\r\n  return (\r\n    <StyledShowCard>\r\n      <div>\r\n        <img className=\"img-wrapper\" src={image} alt=\"\" />\r\n      </div>\r\n      <h2>Name:{name}</h2>\r\n      <h3>Langauge :{language}</h3>\r\n      <p>{summaryAsText}</p>\r\n      <div>\r\n        <Link to={`show${id}`}>readMore</Link>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btns\"\r\n          id=\"btn\"\r\n          onClick={onStarClick}\r\n        >\r\n          <Star active={isStarred} />\r\n        </button>\r\n      </div>\r\n    </StyledShowCard>\r\n  );\r\n};\r\n\r\nexport default ShowCard;\r\n","export default __webpack_public_path__ + \"static/media/404.f16ca75e.jpg\";","import { useReducer, useEffect } from 'react';\r\n\r\nfunction showsReducer(prevState, action) {\r\n  switch (action.type) {\r\n    case 'ADD': {\r\n      return [...prevState, action.showId];\r\n    }\r\n\r\n    case 'REMOVE': {\r\n      return prevState.filter(showId => showId !== action.showId);\r\n    }\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n}\r\n\r\nfunction usePersistedReducer(reducer, initialState, key) {\r\n  const [state, dispatch] = useReducer(reducer, initialState, initial => {\r\n    const persisted = localStorage.getItem(key);\r\n\r\n    return persisted ? JSON.parse(persisted) : initial;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(state));\r\n  }, [state, key]);\r\n\r\n  return [state, dispatch];\r\n}\r\n\r\nexport function useShows(key = 'shows') {\r\n  return usePersistedReducer(showsReducer, [], key);\r\n}\r\n","import React from \"react\";\r\nimport ShowCard from \"../Show/ShowCard\";\r\nimport Not_found_Img from \"../../Image/404.jpg\";\r\nimport { useShows } from \"../../misc/Custom-Hooks\";\r\nimport { FlexGrid } from \"../styled\";\r\n\r\nconst ShowGrid = ({data} ) => {\r\n  const [starredShows, dispatchStarred] = useShows();\r\n\r\n  return (\r\n    <FlexGrid>\r\n      {data.map(({ show }) => {\r\n        const isStarred = starredShows.includes(show.id);\r\n\r\n        const onStarClick = () => {\r\n          if (isStarred) {\r\n            dispatchStarred({ type: 'REMOVE', showId: show.id });\r\n          } else {\r\n            dispatchStarred({ type: 'ADD', showId: show.id });\r\n          }\r\n        };\r\n\r\n        return (\r\n          <ShowCard\r\n            key={show.id}\r\n            id={show.id}\r\n            name={show.name}\r\n            image={show.image ? show.image.medium : Not_found_Img}\r\n            summary={show.summary}\r\n            onStarClick={onStarClick}\r\n            isStarred={isStarred}\r\n          />\r\n        );\r\n      })}\r\n    </FlexGrid>\r\n  );\r\n};\r\n\r\nexport default ShowGrid;\r\n\r\n\r\n\r\n\r\n\r\n// import React from \"react\";\r\n// import ShowCard from \"../Show/ShowCard\";\r\n// import Not_found_Img from \"../../Image/404.jpg\";\r\n// import { useShows } from \"../../misc/Custom-Hooks\";\r\n// import { FlexGrid } from \"../styled\";\r\n// const ShowGrid = ({ data }) => {\r\n//   const [starredShows, dispatchStarred] = useShows();\r\n// // console.log(data);\r\n//   return (\r\n//     <FlexGrid>\r\n//       {data.map(({show}) => {\r\n//         const inStarted = starredShows.includes(show.id);\r\n\r\n//         const onStarredClick = () => {\r\n//           if (inStarted) {\r\n//             dispatchStarred({ type: \"REMOVE\", showId: show.id });\r\n//           } else {\r\n//             dispatchStarred({ type: \"ADD\", showId: show.id });\r\n//           }\r\n//         };\r\n\r\n//         return (\r\n//           <ShowCard\r\n//             key={show.id}\r\n//             show={show.url}\r\n//             image={show.image ? show.image.medium : Not_found_Img}\r\n//             name={show.name}\r\n//             id={show.id}\r\n//             language={show.language}\r\n//             summary={show.summary}\r\n//             onStarredClick={onStarredClick}\r\n//             inStarted={inStarted}\r\n//           />\r\n//         );\r\n//       })}\r\n//       ;\r\n//     </FlexGrid>\r\n//   );\r\n// };\r\n\r\n// export default ShowGrid;\r\n","import styled from 'styled-components';\r\nimport { SearchCard } from '../styled';\r\n\r\nexport const StyledPersonCard = styled(SearchCard)`\r\n  .deathday {\r\n    margin: 0;\r\n    margin-top: 15px;\r\n    font-weight: bold;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { StyledPersonCard } from \"./PersonCard.styled\";\r\n\r\nconst PersonCard = ({ name, country, birthday, image, deathday }) => {\r\n  return (\r\n      <StyledPersonCard>\r\n      <div>\r\n        <img className=\"img-wrapper\" src={image} alt=\"ActorImage\" />\r\n      </div>\r\n      <h2>Name :{name}</h2>\r\n      <h3>Country :{country}</h3>\r\n      <p>Date of birth :{birthday}</p>\r\n      <p className=\"deathday\">{deathday}</p>\r\n    </StyledPersonCard>\r\n  );\r\n};\r\n\r\nexport default PersonCard;\r\n","import React from \"react\";\r\nimport PersonCard from \"../Person/PersonCard\";\r\nimport Not_found_Img from \"../../Image/404.jpg\";\r\nimport { FlexGrid } from \"../styled\";\r\n\r\nconst PersonGrid = ({ data }) => {\r\n  return (\r\n    <FlexGrid>\r\n      {data.map(({ person }) => (\r\n        <PersonCard\r\n          key={person.id}\r\n          name={person.name}\r\n          country={person.country ? person.country.name : \"Unknown\"}\r\n          birthday={person.birthday ? person.birthday : \"Not defiend\"}\r\n          image={person.image ? person.image.medium : Not_found_Img}\r\n          deathday={person.deathday ? `died ${person.deathday}` : \"Alive\" \r\n        }\r\n\r\n        />\r\n      ))}\r\n    </FlexGrid>\r\n  );\r\n};\r\n\r\nexport default PersonGrid;\r\n","import styled from 'styled-components';\r\n\r\nexport const SearchInput = styled.input`\r\n  display: block;\r\n  font-family: 'Roboto', sans-serif;\r\n  width: 200px;\r\n  margin: auto;\r\n  outline: none;\r\n  padding: 13px 15px;\r\n  border: 1px solid #dbdbdb;\r\n  box-shadow: 0px 0px 10px 0px rgba(219, 219, 219, 0.5);\r\n  font-size: 14px;\r\n  border-radius: 12px;\r\n  color: #8d8d8d;\r\n\r\n  &::placeholder {\r\n    font-weight: 300;\r\n    color: #8d8d8d;\r\n  }\r\n`;\r\n\r\nexport const RadioInputsWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  margin: 20px 0;\r\n\r\n  div {\r\n    margin: 0 15px;\r\n  }\r\n`;\r\n\r\nexport const SearchButtonWrapper = styled.div`\r\n  text-align: center;\r\n  margin-bottom: 35px;\r\n\r\n  button {\r\n    color: #fff;\r\n    background-color: ${({ theme }) => theme.mainColors.blue};\r\n    margin: auto;\r\n    padding: 10px 50px;\r\n    font-size: 15px;\r\n    border: none;\r\n    outline: none;\r\n    border-radius: 12px;\r\n    &:hover {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\nimport MainPageLayout from \"../Component/MainPageLayout\";\r\nimport { apiGet } from \"../misc/config\";\r\nimport ShowGrid from \"../Component/Show/ShowGrid\";\r\nimport PersonGrid from \"../Component/Person/PersonGrid\";\r\nimport {\r\n  SearchInput,\r\n  RadioInputsWrapper,\r\n  SearchButtonWrapper,\r\n} from \"./Home.styled\";\r\nconst Home = () => {\r\n  const [input, setInput] = useState(\"\");\r\n  const [results, setResult] = useState(null);\r\n  const [searchOption, setSearchOption] = useState(\"shows\");\r\n  const checked = searchOption === \"shows\";\r\n  const onSearch = () => {\r\n    apiGet(`/search/${searchOption}?q=${input}`).then((data) => {\r\n      setResult(data);\r\n      console.log(data);\r\n    });\r\n  };\r\n\r\n  const onInputChange = (ev) => {\r\n    setInput(ev.target.value);\r\n  };\r\n\r\n  const onRadioChange = (ev) => {\r\n    setSearchOption(ev.target.value);\r\n  };\r\n\r\n  const onKeySearch = (ev) => {\r\n    if (ev.keyCode === 13) {\r\n      onSearch();\r\n    }\r\n  };\r\n  const RenderResult = () => {\r\n    if (results && results.length === 0) {\r\n      return <div>No Result Found</div>;\r\n    }\r\n    if (results && results.length > 0) {\r\n      return results[0].show ? (\r\n        <ShowGrid data={results} />\r\n      ) : (\r\n        <PersonGrid data={results} />\r\n      );\r\n    }\r\n    return null;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MainPageLayout />\r\n      <SearchInput\r\n        type=\"text\"\r\n        placeholder=\"Search a Movie or an Actor\"\r\n        onChange={onInputChange}\r\n        value={input}\r\n        onKeyDown={onKeySearch}\r\n      />\r\n      <RadioInputsWrapper>\r\n        <div>\r\n          <label htmlFor=\"show-search\">\r\n            Show\r\n            <input\r\n              id=\"show-search\"\r\n              type=\"radio\"\r\n              value=\"shows\"\r\n              onChange={onRadioChange}\r\n              checked={checked}\r\n            />\r\n          </label>\r\n        </div>\r\n        {/* </div> */}\r\n        <div>\r\n          <label htmlFor=\"show-people\">\r\n            Actor\r\n            <input\r\n              type=\"radio\"\r\n              id=\"show-people\"\r\n              value=\"people\"\r\n              checked={!checked}\r\n              onChange={onRadioChange}\r\n            />\r\n          </label>\r\n        </div>\r\n      </RadioInputsWrapper>\r\n      <SearchButtonWrapper>\r\n        <button type=\"button\" onClick={onSearch}>\r\n          Search\r\n        </button>\r\n      </SearchButtonWrapper>\r\n      {RenderResult()}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","/* eslint-disable no-console */\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ShowGrid from \"../Component/Show/ShowGrid\";\r\nimport MainPageLayout from \"../Component/MainPageLayout\";\r\nimport { useShows } from \"../misc/Custom-Hooks\";\r\nimport { apiGet } from \"../misc/config\";\r\n\r\nconst Starred = () => {\r\n  const [starredShows] = useShows();\r\n\r\n  const [shows, setShows] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (starredShows && starredShows.length > 0) {\r\n      const promises = starredShows.map((showId) => apiGet(`/shows/${showId}`));\r\n\r\n      Promise.all(promises)\r\n        .then((apiData) => apiData.map((show) => ({ show })))\r\n        .then((results) => {\r\n          setShows(results);\r\n          setIsLoading(false);\r\n        })\r\n        .catch((err) => {\r\n          setError(err.message);\r\n          setIsLoading(false);\r\n        });\r\n    } else {\r\n      setIsLoading(false);\r\n    }\r\n  }, [starredShows]);\r\n\r\n  return (\r\n    <MainPageLayout>\r\n      <>\r\n        {isLoading && <div>Shows are still loading</div>}\r\n        {error && <div>Error occured: {error}</div>}\r\n        {!isLoading && !shows && <div>No shows were added</div>}\r\n        {!isLoading && !error && shows && <ShowGrid data />}\r\n        {console.log(shows)}\r\n      </>\r\n    </MainPageLayout>\r\n  );\r\n};\r\n\r\nexport default Starred;\r\n","import React from \"react\";\r\n\r\nconst Error = () => {\r\n  return <><h1>404 Not found</h1></>;\r\n};\r\n\r\nexport default Error;\r\n","import styled from 'styled-components';\r\n\r\nexport const CastList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  .cast-item {\r\n    flex: 1 0 50%;\r\n    display: flex;\r\n    margin-bottom: 20px;\r\n    align-items: center;\r\n\r\n    @media only screen and (max-width: 768px) {\r\n      flex: 1 0 100%;\r\n    }\r\n  }\r\n\r\n  .pic-wrapper {\r\n    width: 50px;\r\n    min-width: 50px;\r\n    height: 50px;\r\n    overflow: hidden;\r\n    border-radius: 50%;\r\n    img {\r\n      object-fit: cover;\r\n      width: 100%;\r\n      height: 100%;\r\n    }\r\n  }\r\n\r\n  .actor {\r\n    margin-left: 25px;\r\n\r\n    .bold {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Not_found_Img from \"../../Image/404.jpg\";\r\nimport { CastList } from \"./Cast.styled\";\r\n\r\nconst Cast = ({ cast }) => {\r\n  return (\r\n    <CastList>\r\n      {cast.map(({ person, character }, key) => {\r\n        return (\r\n          <>\r\n            <div key={key} className=\"cast-item \">\r\n              <div className=\"pic-wrapper\">\r\n                <img\r\n                  src={person.image ? person.image.medium : Not_found_Img}\r\n                  alt=\"caste-Images\"\r\n                />\r\n              </div>\r\n              <div className=\"actor\">\r\n                <p>\r\n                  <span className=\"bold\">\r\n                    {person.name} | {character.name}\r\n                  </span>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </CastList>\r\n  );\r\n};\r\n\r\nexport default Cast;\r\n","import styled from 'styled-components';\r\n\r\nexport const DetailsWrapper = styled.div`\r\n  p {\r\n    margin: 5px 0;\r\n\r\n    span {\r\n      font-weight: bold;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { DetailsWrapper } from \"./Detailed.styled\";\r\n\r\nconst Details = ({ status, premiered, network }) => {\r\n  return (\r\n    <>\r\n      <DetailsWrapper>\r\n        <p>Staus:{status}</p>\r\n        <p>\r\n          Premiered {premiered} {network ? `on ${network.name}` : null}\r\n        </p>\r\n      </DetailsWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Details;\r\n","import styled from 'styled-components';\r\n\r\nexport const SeasonsWrapper = styled.div`\r\n  p {\r\n    margin: 5px 0;\r\n  }\r\n\r\n  span {\r\n    font-weight: 700;\r\n  }\r\n`;\r\n\r\nexport const SeasonList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  .season-item {\r\n    display: flex;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n\r\n    &:last-child {\r\n      margin-bottom: 0;\r\n    }\r\n\r\n    .left {\r\n      flex: 0 0 30%;\r\n      border-right: 1px solid #b0b0b0;\r\n      padding-right: 20px;\r\n    }\r\n\r\n    .right {\r\n      padding-left: 20px;\r\n      flex: 1;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { SeasonList, SeasonsWrapper } from \"./Season.styled\";\r\n\r\nconst Seasons = ({ seasons }) => {\r\n  return (\r\n    <SeasonsWrapper>\r\n      <p>\r\n        Seasons in total: <span>{seasons.length}</span>\r\n      </p>\r\n      <p>\r\n        Episodes in total:\r\n        <span>\r\n          {seasons.reduce((acc, season) => acc + season.episodeOrder, 0)}\r\n        </span>\r\n      </p>\r\n      <SeasonList>\r\n        {seasons.map((season) => (\r\n          <div key={season.id} className=\"season-item\">\r\n            <div className=\"left\">\r\n              <p>Season {season.number}</p>\r\n              <p>\r\n                Episodes: <span>{season.episodeOrder}</span>\r\n              </p>\r\n            </div>\r\n            <div className=\"right\">\r\n              Aired:{\" \"}\r\n              <span>\r\n                {season.premiereDate} - {season.endDate}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </SeasonList>\r\n    </SeasonsWrapper>\r\n  );\r\n};\r\n\r\nexport default Seasons;\r\n","import styled from 'styled-components';\r\n\r\nexport const MainDataWrapper = styled.div`\r\n  display: flex;\r\n  margin-bottom: 40px;\r\n\r\n  img {\r\n    min-width: 250px;\r\n    width: 300px;\r\n    max-height: 450px;\r\n    border: 1px solid #ddd;\r\n    border-radius: 40px;\r\n  }\r\n\r\n  .text-side {\r\n    margin-left: 20px;\r\n    .summary {\r\n      color: #5f5f5f;\r\n      line-height: 1.5;\r\n    }\r\n  }\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    flex-wrap: wrap;\r\n    img {\r\n      margin-bottom: 20px;\r\n      margin: auto;\r\n    }\r\n    .text-side {\r\n      margin-left: 0;\r\n      margin-top: 20px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Headline = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n\r\n  h1 {\r\n    margin: 0;\r\n    border-right: 1px solid #ddd;\r\n    padding-right: 25px;\r\n    margin-right: 20px;\r\n  }\r\n\r\n  div {\r\n    display: flex;\r\n    align-items: center;\r\n    span {\r\n      margin-left: 10px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const TagList = styled.div`\r\n  display: inline-flex;\r\n  flex-wrap: wrap;\r\n\r\n  span {\r\n    margin: 6px;\r\n    margin-bottom: 0;\r\n    color: blue;\r\n    background-color: #d0c9ff;\r\n    padding: 3px 13px;\r\n    border-radius: 20px;\r\n    font-size: 14px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Star } from \"../styled\";\r\nimport { Headline, MainDataWrapper } from \"./ShowMainData.styled\";\r\n\r\nconst ShowMainData = ({ image, name, rate, summary, tags, language }) => {\r\n  return (\r\n    <>\r\n      <MainDataWrapper>\r\n        <img src={image} alt=\"show-cover\" />\r\n        <div className=\"text-side\">\r\n          <Headline>\r\n            <h1>{name}</h1>\r\n            <div>\r\n              <Star active/>\r\n              <span>{rate}</span>\r\n            </div>\r\n          </Headline>\r\n          <div\r\n            className=\"summary\"\r\n            dangerouslySetInnerHTML={{ __html: summary }}\r\n          />\r\n\r\n          <div>\r\n            <div>\r\n              Tags:-{\" \"}\r\n              {tags.map((tag, i) => (\r\n                <span key={i}>{`${tag}${\"  \"}`}</span>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </MainDataWrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShowMainData;\r\n","import styled from 'styled-components';\r\n\r\nexport const ShowPageWrapper = styled.div`\r\n  padding: 0 20px;\r\n\r\n  @media only screen and (min-width: 516px) {\r\n    padding: 0 40px;\r\n  }\r\n\r\n  @media only screen and (min-width: 768px) {\r\n    padding: 0 60px;\r\n  }\r\n\r\n  @media only screen and (min-width: 992px) {\r\n    padding: 0 80px;\r\n  }\r\n`;\r\n\r\nexport const InfoBlock = styled.div`\r\n  margin-bottom: 40px;\r\n  h2 {\r\n    margin: 0;\r\n    margin-bottom: 30px;\r\n    font-size: 22px;\r\n  }\r\n`;","import React, { useReducer, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Cast from \"../Component/Show/Cast\";\r\nimport Details from \"../Component/Show/Details\";\r\nimport Season from \"../Component/Show/Season\";\r\nimport ShowMainData from \"../Component/Show/ShowMainData\";\r\nimport { apiGet } from \"../misc/config\";\r\nimport Not_found_Img from \"../Image/404.jpg\";\r\nimport { ShowPageWrapper } from \"./Show.styled\";\r\n\r\nconst reducer = (prevState, action) => {\r\n  switch (action.type) {\r\n    case \"FETCH_SUCCESS\": {\r\n      return { isLoading: false, error: null, show: action.show };\r\n    }\r\n\r\n    case \"FETCH_FAILED\": {\r\n      return { ...prevState, isLoading: false, error: action.error };\r\n    }\r\n\r\n    default:\r\n      return prevState;\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  show: null,\r\n  isLoading: true,\r\n  error: null,\r\n};\r\n\r\nconst Show = () => {\r\n  const { id } = useParams();\r\n\r\n  const [{ show, isLoading, error }, dispatch] = useReducer(\r\n    reducer,\r\n    initialState\r\n  );\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n\r\n    apiGet(`/shows/${id}?embed[]=seasons&embed[]=cast`)\r\n      .then((results) => {\r\n        if (isMounted) {\r\n          dispatch({ type: \"FETCH_SUCCESS\", show: results });\r\n          console.log(results);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        if (isMounted) {\r\n          dispatch({ type: \"FETCH_FAILED\", error: err.message });\r\n        }\r\n      });\r\n\r\n    return () => {\r\n      isMounted = false;\r\n    };\r\n  }, [id]);\r\n\r\n  if (isLoading) {\r\n    return <div>Data is being loaded</div>;\r\n  }\r\n\r\n  if (error) {\r\n    return <div>Error occured: {error}</div>;\r\n  }\r\n\r\n  if (show) {\r\n    return (\r\n      <>\r\n        <ShowPageWrapper>\r\n          <ShowMainData\r\n            name={show.name}\r\n            image={show.image ? show.image.medium : Not_found_Img}\r\n            language={show.language}\r\n            rate={show.rating ? show.rating.average : \"N/A\"}\r\n            summary={show.summary}\r\n            tags={show.genres ? show.genres : \"N/A\"}\r\n          />\r\n\r\n          <div>\r\n            <h2>Details</h2>\r\n            <Details\r\n              status={show.status}\r\n              premiered={show.premiered}\r\n              network={show.network}\r\n            />\r\n          </div>\r\n          <div>\r\n            <h2>Sesions</h2>\r\n\r\n            <Season\r\n              //  eslint-disable-next-line no-undef\r\n              seasons={show._embedded.seasons}\r\n            />\r\n            <div>\r\n              <h2>Cast</h2>\r\n              <Cast cast={show._embedded.cast} />\r\n            </div>\r\n          </div>\r\n        </ShowPageWrapper>\r\n      </>\r\n    );\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default Show;\r\n","import React from \"react\";\nimport Home from \"./Pages/Home\";\nimport Starred from \"./Pages/Starred\";\nimport Error from \"./Pages/Error\";\nimport Show from \"./Pages/Show\";\nimport { ThemeProvider } from \"styled-components\";\nimport { Switch, Route } from \"react-router\";\n\nconst theme = {\n  mainColors: {\n    blue: \"#2400ff\",\n    gray: \"#c6c6c6\",\n    dark: \"#353535\",\n  },\n};\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Switch>\n        <Route exact path=\"/\">\n          <Home />\n        </Route>\n        <Route exact path=\"/starred\">\n          <Starred />\n        </Route>\n        <Route exact path=\"/show:id\">\n          <Show />\n        </Route>\n        <Route>\n          <Error />\n        </Route>\n      </Switch>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {  HashRouter } from \"react-router-dom\";\nimport \"./index.css\"\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}